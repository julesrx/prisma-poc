// see squad-docs.git/database.dbml

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int    @id @default(autoincrement())
  keycloakId String @unique

  practice   Practice @relation(fields: [practiceId], references: [id])
  practiceId Int

  position Position

  // Int√©gration possible directement avec Keycloak ?
  // https://github.com/thomasdarimont/keycloak-avatar-minio-extension
  avatar Bytes

  Article Article[]
  Comment Comment[]
  Like    Like[]

  @@map("Users")
}

model Practice {
  id   Int    @id @default(autoincrement())
  name String

  User    User[]
  Article Article[]

  @@map("Practices")
}

model Article {
  id Int @id @default(autoincrement())

  practice   Practice @relation(fields: [practiceId], references: [id])
  practiceId Int

  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  title       String
  content     String
  publishDate DateTime

  Image   Image[]
  Comment Comment[]
  Like    Like[]

  @@map("Articles")
}

model Image {
  id Int @id @default(autoincrement())

  article   Article @relation(fields: [articleId], references: [id])
  articleId Int

  src String

  @@map("Images")
}

model Comment {
  id Int @id @default(autoincrement())

  article   Article @relation(fields: [articleId], references: [id])
  articleId Int

  author   User @relation(fields: [authorId], references: [id])
  authorId Int

  content String
  date    DateTime

  @@map("Comments")
}

model Like {
  id Int @id @default(autoincrement())

  article   Article @relation(fields: [articleId], references: [id])
  articleId Int

  user   User @relation(fields: [userId], references: [id])
  userId Int

  date DateTime

  @@map("Likes")
}

enum Position {
  Collaborator
  Candidate
}
